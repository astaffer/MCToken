/*
 * Token Connect API
 *
 * The MDES APIs are designed as RPC style stateless web services where each API endpoint represents an operation to be performed. All request and response payloads are sent in the JSON (JavaScript Object Notation) data-interchange format. Each endpoint in the API specifies the HTTP Method used to access it. All strings in request and response objects are to be UTF-8 encoded. 
 *
 * The version of the OpenAPI document: 2.03
 * Contact: apisupport@mastercard.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using MastercardApi.Client.Client;
using MastercardApi.Client.Api;
// uncomment below to import models
//using MastercardApi.Client.Model;

namespace MastercardApi.Client.Test.Api
{
    /// <summary>
    ///  Class for testing GetEligibleTokenRequestorsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class GetEligibleTokenRequestorsApiTests : IDisposable
    {
        private GetEligibleTokenRequestorsApi instance;

        public GetEligibleTokenRequestorsApiTests()
        {
            instance = new GetEligibleTokenRequestorsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GetEligibleTokenRequestorsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' GetEligibleTokenRequestorsApi
            //Assert.IsType<GetEligibleTokenRequestorsApi>(instance);
        }

        /// <summary>
        /// Test GetEligibleTokenRequestors
        /// </summary>
        [Fact]
        public void GetEligibleTokenRequestorsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetEligibleTokenRequestorsRequest getEligibleTokenRequestorsRequest = null;
            //var response = instance.GetEligibleTokenRequestors(getEligibleTokenRequestorsRequest);
            //Assert.IsType<GetEligibleTokenRequestorsResponse>(response);
        }
    }
}

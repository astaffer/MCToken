/*
 * Token Connect API
 *
 * The MDES APIs are designed as RPC style stateless web services where each API endpoint represents an operation to be performed. All request and response payloads are sent in the JSON (JavaScript Object Notation) data-interchange format. Each endpoint in the API specifies the HTTP Method used to access it. All strings in request and response objects are to be UTF-8 encoded. 
 *
 * The version of the OpenAPI document: 2.03
 * Contact: apisupport@mastercard.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using MastercardApi.Client.Api;
using MastercardApi.Client.Model;
using MastercardApi.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace MastercardApi.Client.Test.Model
{
    /// <summary>
    ///  Class for testing FundingAccount
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class FundingAccountTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for FundingAccount
        //private FundingAccount instance;

        public FundingAccountTests()
        {
            // TODO uncomment below to create an instance of FundingAccount
            //instance = new FundingAccount();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of FundingAccount
        /// </summary>
        [Fact]
        public void FundingAccountInstanceTest()
        {
            // TODO uncomment below to test "IsType" FundingAccount
            //Assert.IsType<FundingAccount>(instance);
        }


        /// <summary>
        /// Test the property 'CardAccountData'
        /// </summary>
        [Fact]
        public void CardAccountDataTest()
        {
            // TODO unit test for the property 'CardAccountData'
        }
        /// <summary>
        /// Test the property 'FinancialAccountData'
        /// </summary>
        [Fact]
        public void FinancialAccountDataTest()
        {
            // TODO unit test for the property 'FinancialAccountData'
        }
        /// <summary>
        /// Test the property 'AccountHolderData'
        /// </summary>
        [Fact]
        public void AccountHolderDataTest()
        {
            // TODO unit test for the property 'AccountHolderData'
        }
        /// <summary>
        /// Test the property 'DataValidUntilTimestamp'
        /// </summary>
        [Fact]
        public void DataValidUntilTimestampTest()
        {
            // TODO unit test for the property 'DataValidUntilTimestamp'
        }

    }

}

/*
 * Token Connect API
 *
 * The MDES APIs are designed as RPC style stateless web services where each API endpoint represents an operation to be performed. All request and response payloads are sent in the JSON (JavaScript Object Notation) data-interchange format. Each endpoint in the API specifies the HTTP Method used to access it. All strings in request and response objects are to be UTF-8 encoded. 
 *
 * The version of the OpenAPI document: 2.03
 * Contact: apisupport@mastercard.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using MastercardApi.Client.Api;
using MastercardApi.Client.Model;
using MastercardApi.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace MastercardApi.Client.Test.Model
{
    /// <summary>
    ///  Class for testing TokenRequestor
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class TokenRequestorTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for TokenRequestor
        //private TokenRequestor instance;

        public TokenRequestorTests()
        {
            // TODO uncomment below to create an instance of TokenRequestor
            //instance = new TokenRequestor();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TokenRequestor
        /// </summary>
        [Fact]
        public void TokenRequestorInstanceTest()
        {
            // TODO uncomment below to test "IsType" TokenRequestor
            //Assert.IsType<TokenRequestor>(instance);
        }


        /// <summary>
        /// Test the property 'TokenRequestorId'
        /// </summary>
        [Fact]
        public void TokenRequestorIdTest()
        {
            // TODO unit test for the property 'TokenRequestorId'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'ConsumerFacingEntityName'
        /// </summary>
        [Fact]
        public void ConsumerFacingEntityNameTest()
        {
            // TODO unit test for the property 'ConsumerFacingEntityName'
        }
        /// <summary>
        /// Test the property 'ImageAssetId'
        /// </summary>
        [Fact]
        public void ImageAssetIdTest()
        {
            // TODO unit test for the property 'ImageAssetId'
        }
        /// <summary>
        /// Test the property 'TokenRequestorType'
        /// </summary>
        [Fact]
        public void TokenRequestorTypeTest()
        {
            // TODO unit test for the property 'TokenRequestorType'
        }
        /// <summary>
        /// Test the property 'WalletId'
        /// </summary>
        [Fact]
        public void WalletIdTest()
        {
            // TODO unit test for the property 'WalletId'
        }
        /// <summary>
        /// Test the property 'EnabledAccountRanges'
        /// </summary>
        [Fact]
        public void EnabledAccountRangesTest()
        {
            // TODO unit test for the property 'EnabledAccountRanges'
        }
        /// <summary>
        /// Test the property 'SupportedPushMethods'
        /// </summary>
        [Fact]
        public void SupportedPushMethodsTest()
        {
            // TODO unit test for the property 'SupportedPushMethods'
        }
        /// <summary>
        /// Test the property 'SupportsMultiplePushedCards'
        /// </summary>
        [Fact]
        public void SupportsMultiplePushedCardsTest()
        {
            // TODO unit test for the property 'SupportsMultiplePushedCards'
        }
        /// <summary>
        /// Test the property 'SupportedAccountHolderData'
        /// </summary>
        [Fact]
        public void SupportedAccountHolderDataTest()
        {
            // TODO unit test for the property 'SupportedAccountHolderData'
        }
        /// <summary>
        /// Test the property 'SupportsCardHolderAuthentication'
        /// </summary>
        [Fact]
        public void SupportsCardHolderAuthenticationTest()
        {
            // TODO unit test for the property 'SupportsCardHolderAuthentication'
        }
        /// <summary>
        /// Test the property 'SupportsTokenConnect'
        /// </summary>
        [Fact]
        public void SupportsTokenConnectTest()
        {
            // TODO unit test for the property 'SupportsTokenConnect'
        }
        /// <summary>
        /// Test the property 'AvailablePushMethods'
        /// </summary>
        [Fact]
        public void AvailablePushMethodsTest()
        {
            // TODO unit test for the property 'AvailablePushMethods'
        }

    }

}

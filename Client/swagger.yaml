openapi: 3.0.3
info:
  version: '2.03'
  title: Token Connect API
  description: >
    The MDES APIs are designed as RPC style stateless web services where each
    API endpoint represents an operation to be performed. All request and
    response payloads are sent in the JSON (JavaScript Object Notation)
    data-interchange format. Each endpoint in the API specifies the HTTP Method
    used to access it. All strings in request and response objects are to be
    UTF-8 encoded.
  contact:
    name: API Support
    email: apisupport@mastercard.com
    url: 'https://developer.mastercard.com/support'
servers:
  - url: 'https://api.mastercard.com/mdes'
    description: Production server
  - url: 'https://sandbox.api.mastercard.com/mdes'
    description: Sandbox server
tags:
  - name: Get Eligible Token Requestors
    description: Retrieve information about eligible Token Requestors
  - name: Get Assets
    description: Retrieve static assets from MDES
  - name: Push Account
    description: Push card or account to Token Requestors
paths:
  /connect/1/0/getEligibleTokenRequestors:
    post:
      tags:
        - Get Eligible Token Requestors
      summary: >-
        Retrieve information about Token Requestors that have been enabled for
        one or more of the issuer's account ranges
      description: >
        This API is used to retrieve information about Token Requestors that
        have been enabled for one or more of the Issuer's account ranges. The
        information returned is cached by Issuer back-end servers. The Issuer
        typically uses this information to present to their cardholders the list
        of available Token Requestors they can push their card (or account) to,
        both for web-based and app-based user interfaces.

        Note: all Token Requestors enabled for the account range(s) are
        returned, regardless whether they support MDES Token Connect or not. The
        Issuer can easily determine from the response the Token Requestors that
        support the MDES Token Connect framework.
      operationId: getEligibleTokenRequestors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetEligibleTokenRequestorsRequest'
        description: Contains the details of the request message.
      responses:
        '200':
          description: The call succeeded. See payload for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEligibleTokenRequestorsResponse'
        default:
          description: An error occurred. See payload for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrapper'
  '/issuer-assets/1/0/asset/tokenrequestor/{AssetId}':
    get:
      tags:
        - Get Assets
      summary: >-
        Retrieve static Assets from MDES's repository, such as Token Requestors'
        logos
      description: >
        This API is used to retrieve static Assets from MDES repository, such as
        the Token Requestor logo.

        Every Asset in the repository is referenced using an Asset ID. Once an
        Asset has been assigned to an Asset ID, the contents of the Asset will
        not change. If contents needs to change (for example, Token Requestor
        has supplied new artwork), they will be updated in the repository and be
        assigned a new Asset ID.

        Different types of Assets are supported in the repository, such as
        images and text files; for each type of Asset, multiple formats may be
        supported. For example, a single image asset may be supported in various
        file formats, or variant sizes. This allows the Issuer to select the
        most appropriate format to use for a particular target.
      operationId: getAsset
      parameters:
        - name: AssetId
          in: path
          description: >
            An Asset ID corresponding to an individual Digital Asset. The Asset
            ID itself is supplied as a Get request in the form of
            https://{ENVIRONMENT URL GOES
            HERE}/mdes/issuer-assets/static/TODO/asset/tokenrequestor/{AssetID}.

            The Asset ID of a Token Requestor is returned as part of the Token
            Requestor Data from the getEligibleTokenRequestors Response.
          required: true
          example: 554dbc44-496a-4896-b41c-dd431e25d5e4
          schema:
            type: string
      responses:
        '200':
          description: The call succeeded. See payload for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetResponse'
        default:
          description: An error occurred. See payload for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrapper'
  /connect/1/0/pushAccount:
    post:
      tags:
        - Push Account
      summary: Push a Card or a Financial Account to a given Token Requestor
      description: >
        Used to push a Card or a Financial Account to a given Token Requestor.
        If the Token Requestor participates in MDES Token Connect program and if
        the funding account has been enabled in MDES for this Token Requestor,
        MDES returns the Token Requestor's URI(s) as well as a
        pushAccountReceipt. The Issuer can then call out one of the Token
        Requestor's URI, with the push receipt as parameter.<br/> <br/> This
        endpoint requires the usage of Mastercard client encryption librairies. 

        - For that, refer to [Token Connect API
        Security](https://developer.mastercard.com/mdes-token-connect/documentation/api-basics/#api-security)
        and [How to Consume the MDES Token Connect
        API?](https://developer.mastercard.com/mdes-token-connect/documentation/api-basics/#how-to-consume-the-mdes-token-connect-api)

        - Requests are expected to contain the following fields:
        `encryptedData`, `publicKeyFingerprint`,
        `encryptedKey`,`oaepHashingAlgorithm` and `iv`
                
        - Examples of encrypted payloads can also be found in [JSON
        Samples](https://developer.mastercard.com/mdes-token-connect/documentation/code-and-formats/#json-samples).
      operationId: pushAccount
      x-mastercard-api-encrypted: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushAccountRequest'
        description: >
          A Push Account request is used to trigger the push of a Card or
          Financial Account to a target Token Requestor
      responses:
        '200':
          description: The call succeeded. See payload for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushAccountResponse'
        default:
          description: An error occurred. See payload for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWrapper'
components:
  schemas:
    GetEligibleTokenRequestorsRequest:
      required:
        - requestId
        - accountRanges
      properties:
        requestId:
          type: string
          description: |
            Unique identifier for the request.
             __Max Length:__ 64
          example: '123456'
        accountRanges:
          type: array
          description: >
            Array of the starting numbers of the account ranges to retrieve the
            enabled Token Requestors for.

            The starting numbers are numeric strings between 9 and 19 in
            length.If the starting numbers are less than 19, MDES will zero pad
            the end of the starting numbers to 19 in length. The padded value
            must exactly match the account range start number enabled for the
            Token Requestor.
             __Max Number of Items:__ 25
          items:
            type: string
            example: '5123456789'
        supportsTokenConnect:
          type: boolean
          description: >
            A boolean parameter to receive only token requestors that support
            Token Connect or not. Must be one of: * true - Token Connect is
            supported * false - Token Connect is not supported
          example: true
    GetEligibleTokenRequestorsResponse:
      required:
        - responseId
      properties:
        responseId:
          type: string
          description: >
            Unique identifier for the response matching the requestId supplied
            in the request.

            __Max Length:__ 64
          example: '123456'
        tokenRequestors:
          type: array
          description: >
            The array of Token Requestors that are eligible for the account
            ranges in the request.

            __Conditional.__ Required if the operation was successful.
          items:
            $ref: '#/components/schemas/TokenRequestor'
        errors:
          type: array
          description: >
            Element encapsulating a collection of errors that occurred during a
            single request.

            __Conditional.__ Required if one or more errors occurred while
            performing the operation. Not present if the operation was
            successful.
          items:
            $ref: '#/components/schemas/Error'
    PushAccountRequest:
      required:
        - requestId
        - pushFundingAccount
        - tokenRequestorId
      properties:
        requestId:
          type: string
          description: |
            Unique identifier for the request.
             __Max Length:__ 64
          example: '123456'
        pushFundingAccount:
          $ref: '#/components/schemas/PushFundingAccount'
        tokenRequestorId:
          type: string
          description: |
            Identifies the Token Requestor
            __Length:__ 11
          example: '50123456789'
    PushAccountResponse:
      required:
        - responseId
      properties:
        responseId:
          type: string
          description: >
            Unique identifier for the response matching the requestId supplied
            in the request.
             __Max Length:__ 64
          example: '123456'
        pushAccountReceipt:
          type: string
          description: >
            Receipt value to be passed to the Token Requestor. The
            pushAccountReceipt represents the pushed account details and expires
            after 15 minutes.

            __Conditional.__ Required if the push operation was successful. Not
            present otherwise.

            __Max Length:__ 64 characters.

            When valid, the receipt will consist of a 3-character prefix
            identifying the product associated to the funding account
            concatenated with a universally unique identifier, in the form
            prefix-UUID. The prefix is needed by some Token Requestors in
            preparation of performing a tokenization. Prefix values are:
             * MCC: Mastercard Credit
             * DMC: Mastercard Debit
             * MSI: Maestro
             * PVL: Private Label
          example: MCC-C307F0AE-298E-48EB-AA43-A7C40B32DDDE
        availablePushMethods:
          type: array
          description: >
            Array of push methods supported by the Token Requestor.

            __Conditional.__ Required if the push operation was successful. Not
            present otherwise.
          items:
            $ref: '#/components/schemas/PushMethod'
        errors:
          type: array
          description: >
            Element encapsulating a collection of errors that occurred during a
            single request.

            __Conditional.__ Required if one or more errors occurred while
            performing the operation. Not present if the operation was
            successful.
          items:
            $ref: '#/components/schemas/Error'
    AssetResponse:
      properties:
        mediaContents:
          type: array
          description: >-
            Contains all contents of the Asset, including all variations. When
            the Asset corresponds to a Token Requestor's logo, the logo is
            provided both in .svg as well as in .png format
          items:
            $ref: '#/components/schemas/MediaContent'
    MediaContent:
      required:
        - type
        - data
      description: >-
        The content of the media. When the Asset corresponds to a Token
        Requestor's logo, the content is a square image.
      properties:
        type:
          type: string
          description: >
            What type of media this is.

            __Max Length:__ 32.

            Specified as a MIME type, which will be one of the following
            supported types:
             * "application/pdf": for images (must be a vector PDF image)
             * "image/png": includes alpha channel
             * "image/svg+xml": image in SVG format
             * "text/plain"
             * "text/html"
          example: image/png
        data:
          type: string
          description: >
            The data for this item of media. Base64-encoded data, where the
            decoded data is in the format as specified in ‘type'.
          example: >-
            iVBORw0KGgoAAAANSUhEUgAAAXcAAAF3CAIAAADRopypAAAABGdBTUEAANbY1E9YMgAAAAlwSFlzAAAASAAAAEgARslrPgAAGtNJREFUeNrt3W9oW
        height:
          type: string
          format: int32
          description: >
            For non-SVG image assets, the height of the image. Specified in
            pixels.

            __Max Length:__ 6.
          example: "192"
        width:
          type: string
          format: int32
          description: >
            For non-SVG image assets, the width of the image. Specified in
            pixels.

            __Max Length:__ 6.
          example: "192"
    ErrorWrapper:
      type: object
      required:
        - errors
      properties:
        errors:
          $ref: '#/components/schemas/ErrorList'
        responseId:
          type: string
          description: A response identifier
          example: 5d4ecdc5-e6cd-47cc-94fc-d6b2dfd3338c
    ErrorList:
      type: array
      minItems: 1
      items:
        $ref: '#/components/schemas/Error'
    Error:
      required:
        - source
        - reasonCode
      properties:
        source:
          type: string
          description: >
            An element used to indicate the source of the issue causing this
            error.

            __Max Length:__ 32. Must be either:
             * __INPUT__: Service input data triggered an error
             * __MDES__: MDES reported an error
          example: INPUT
        reasonCode:
          type: string
          description: >
            A reason code for the error that has occurred. See Error Reason Code
            definitions for the appropriate API service.

            __Max Length:__ 100
          example: INVALID_FIELD_LENGTH
        description:
          type: string
          description: |
            Description of the reason why the operation failed.
            __Max Length:__ 256
          example: 'Invalid Field Length - {field name}'
        errorCode:
          type: string
          description: >
            Only generated by Open API. See Open API documentation for use
            cases.

            __Max Length:__ 100
          example: null
        recoverable:
          type: boolean
          description: |
            Only generated by Open API. See Open API documentation.
          example: true
    TokenRequestor:
      required:
        - tokenRequestorId
        - name
        - consumerFacingEntityName
        - tokenRequestorType
        - enabledAccountRanges
      description: >-
        The information that MDES returns for each Token Requestor, when it is
        enabled for at least one of the Issuer's input account range
      properties:
        tokenRequestorId:
          type: string
          description: >
            Identifies the Token Requestor where the Account must be pushed to.
            The string contains a 11-digit numeric value.

            __Length:__ 11
          example: '50123456789'
        name:
          type: string
          description: |
            The legal name of the Token Requestor.
            __Max Length:__ 64
          example: Sunrise Ave. Ltd
        consumerFacingEntityName:
          type: string
          description: >
            The name of the Token Requestor to be displayed to the account
            holder.

            __Max Length:__ 100
          example: Happy Sunrise Online
        imageAssetId:
          type: string
          description: >
            The image of the Token Requestor (for instance a logo). Provided as
            an Asset ID – use the Get Asset API to retrieve the actual asset.

            __Max Length:__ 64
          example: dbc55444-496a-4896-b41c-5d5e2dd431e2
        tokenRequestorType:
          type: string
          description: |
            The type of the Token Requestor.
            __Max Length:__ 32. Must be either:
             * MERCHANT: The Token Requestor is a Merchant
             * WALLET: The Token Requestor is a Wallet or a Commerce Platform
          example: MERCHANT
        walletId:
          type: string
          description: >
            The identifier of the Wallet Provider.

            __Length:__ 3

            __Conditional,__ Only present when the token is provided to a Wallet
            Provider. Not present otherwise.
          example: '123'
        enabledAccountRanges:
          type: array
          description: >
            Array of account range start numbers that are enabled for the Token
            Requestor.The start numbers will be 19 digits in length.
          items:
            type: integer
            format: int64
            example: 5123456789000000000
        supportedPushMethods:
          type: array
          description: >
            Array of the push methods supported by the Token Requestor.

            __Conditional__. The array is not returned if the Token Requestor
            does not participate in MDES Token Connect Program.

            Possible push methods are:
             * ANDROID: The Token Requestor supports app-to-app and web-to-app communication on Android.
             * IOS: The Token Requestor supports app-to-app and web-to-app communication on iOS.
             * WEB: The Token Requestor supports web-to-web or app-to-web communication.
          items:
            type: string
            example: ANDROID
        supportsMultiplePushedCards:
          type: boolean
          description: >
            Flag to indicate if Token Requestor supports multiple push account
            receipts in a single request. When supported, a maximum of 5
            receipts may be sent to the Token Requestor in a single request

            __Conditional__. Must be present if the Token Requestor participates
            in MDES Token Connect program, not present otherwise.

            Must be either :
             * true: Multiple push receipts are supported.
             * false: Multiple push receipts are not supported.
          example: true
        supportedAccountHolderData:
          type: array
          description: >
            List (array) of account holder data elements that the Token
            Requestor accepts to receive from the Issuer with a pushed card or
            account.

            __Conditional__. The array is not returned if the Token Requestor
            does not participate in MDES Token Connect Program. If the Token
            Requestor participates in MDES Token Connect but doesn't accept any
            account holder data then an empty array is returned.

            __To ensure forward-compatibility, all API client implementations
            must be resilient to new data element values being added to
            responses from MDES.__

            Possible values are:
             * "NAME": The first name and last name of the account holder
             * "ADDRESS": The billing address for the account holder
             * "EMAIL_ADDRESS": The email address for the account holder
             * "MOBILE_PHONE_NUMBER": The mobile phone number for the account holder
          items:
            type: string
            example: ADDRESS
        supportsCardHolderAuthentication:
          type: boolean
          description: >
            Flag to indicate if token requestor supports cardholder
            authentication after the token is activated. Must be one of:
              * true - Post Tokenization Carholder Authentication (Consent Service) is supported.
              * false - Post Tokenization Carholder Authentication (Consent Service) is not supported.
          example: true
        supportsTokenConnect:
          type: boolean
          description: >
            A boolean parameter indicate that token requestor supports Token
            Connect or not. Must be one of: * true - Token Connect is supported
            * false - Token Connect is not supported
          example: true
        availablePushMethods:
          type: array
          description: Array of push methods supported by the token requestor.
          items:
            $ref: '#/components/schemas/PushMethod'
    PushFundingAccount:
      required:
        - encryptedPayload
      properties:
        encryptedPayload:
          $ref: '#/components/schemas/EncryptedPayload'
    EncryptedPayload:
      required:
        - publicKeyFingerprint
        - encryptedKey
        - encryptedData
      properties:
        encryptedData:
          $ref: '#/components/schemas/FundingAccount'
        publicKeyFingerprint:
          type: string
          description: >-
            Refer to Breaking the Encrypted Payload Down >
            [publicKeyFingerprint](https://developer.mastercard.com/platform/documentation/security-and-authentication/securing-sensitive-data-using-payload-encryption/#breaking-the-encrypted-payload-down)
          example: 80810fc13a8319fcf0e2e(...)82cc3ce671176343cfe8160c2279
        encryptedKey:
          type: string
          description: >-
            Refer to Breaking the Encrypted Payload Down >
            [encryptedKey](https://developer.mastercard.com/platform/documentation/security-and-authentication/securing-sensitive-data-using-payload-encryption/#breaking-the-encrypted-payload-down)
          example: d5112fa08e554e3dbc455d0628(...)52e826dd10311cf0d63bbfb231a1a63ecc13
        oaepHashingAlgorithm:
          type: string
          description: >-
            Refer to Breaking the Encrypted Payload Down >
            [oaepPaddingDigestAlgorithm](https://developer.mastercard.com/platform/documentation/security-and-authentication/securing-sensitive-data-using-payload-encryption/#breaking-the-encrypted-payload-down)
          example: SHA512
        iv:
          type: string
          description: >-
            Refer to Breaking the Encrypted Payload Down >
            [iv](https://developer.mastercard.com/platform/documentation/security-and-authentication/securing-sensitive-data-using-payload-encryption/#breaking-the-encrypted-payload-down)
          example: 1b9396c98ab2bfd195de661d70905a45
    FundingAccount:
      properties:
        cardAccountData:
          $ref: '#/components/schemas/CardAccount'
        financialAccountData:
          $ref: '#/components/schemas/FinancialAccount'
        accountHolderData:
          $ref: '#/components/schemas/AccountHolder'
        dataValidUntilTimestamp:
          type: string
          description: >
            The date/time after which this encrypted payload object is
            considered invalid. If present, all systems must reject this
            encrypted object after this time and treat it as invalid data. Must
            be a value no more than 30 days in the future. Mastercard recommends
            using a value of (CurrentTime + 30 minutes).

            __Max length:__ 29. Must be expressed in ISO 8601 extended format as
            one of the following: * YYYY-MM-DDThh:mm:ss[.sss]Z *
            YYYY-MM-DDThh:mm:ss[.sss]±hh:mm

            where [.sss] is optional and can be 1 to 3 digits.
          example: '2019-07-04T12:09:56.123-07:00'
    CardAccount:
      required:
        - accountNumber
      properties:
        accountNumber:
          type: string
          description: |
            The Account Primary Account Number of the card to be digitized.
            __Max length:__ 19 -  __Min length:__ 9.
            __Data Type:__ String (Numeric)
          example: '5123456789012345'
        expiryMonth:
          type: string
          description: >
            The month of the expiration date of the card to be digitized. Note
            that the expiry date may not be in the past. May be omitted if the
            card does not have an expiry date.

            __Length:__ 2

            __Data Type:__ String (Numeric)
          example: '12'
        expiryYear:
          type: string
          description: >
            The year of the expiration date of the card to be digitized. Note
            that the expiry date may not be in the past. May be omitted if the
            card does not have an expiry date.

            __Length:__ 2

            __Data Type:__ String (Numeric)
          example: '21'
    FinancialAccount:
      required:
        - financialAccountId
        - interbankCardAssociationId
        - countryCode
      properties:
        financialAccountId:
          type: string
          description: >
            The identifier of the financial account being tokenized.This could
            be a bank account number or other types of financial accounts.

            __Max length:__ 64 -  __Min length:__ 9.

            __Data Type:__ String (spaces not allowed).
          example: '5123456789012345'
        interbankCardAssociationId:
          type: string
          description: >
            The identifier (ICA) assigned by Mastercard to the financial
            institution.

            __Max length:__ 11 -  __Min length:__ 3.

            __Data Type:__ String (Numeric).
          example: '1234'
        countryCode:
          type: string
          description: >
            The country of the financial account. Expressed as a 3-letter
            (alpha-3) country code as defined in ISO 3166-1.

            __Length:__ 3
          example: GBR
    AccountHolder:
      properties:
        accountHolderName:
          type: string
          description: >
            __Optional.__ The name of the account holder in the format
            LASTNAME/FIRSTNAME or FIRSTNAME LASTNAME.

            __Max length:__ 27. __Data Type:__ String.
          example: John Doe
        accountHolderAddress:
          $ref: '#/components/schemas/BillingAddress'
        accountHolderEmailAddress:
          type: string
          description: |
            __Optional.__ The e-mail address of the account holder.
            __Max length:__ 320. __Data Type:__ String.
          example: john.doe@anymail.com
        accountHolderMobilePhoneNumber:
          $ref: '#/components/schemas/PhoneNumber'
    BillingAddress:
      properties:
        line1:
          type: string
          description: |
            First line of the billing address.
            __Max length:__ 64. __Data Type:__ String.
          example: 100 1st Street
        line2:
          type: string
          description: |
            Second line of the billing address.
            __Max length:__ 64. __Data Type:__ String.
          example: Apt. 4B
        city:
          type: string
          description: |
            The city of the billing address.
            __Max length:__ 32. __Data Type:__ String.
          example: St. Louis
        countrySubdivision:
          type: string
          description: >
            The country subdivision (for example, the state in the U.S.) of the
            billing address.

            __Max length:__ 12. __Data Type:__ String.
          example: MO
        postalCode:
          type: string
          description: >
            The postal code (for example, zipcode in the U.S.) of the billing
            address.

            __Max length:__ 16. __Data Type:__ String.
          example: '61000'
        country:
          type: string
          description: >
            The country of the billing address. Expressed as a 3-letter
            (alpha-3) country code as defined in ISO 3166-1.

            __Length:__ 3. __Data Type:__ String.
          example: USA
    PhoneNumber:
      required:
        - countryDialInCode
        - phoneNumber
      properties:
        countryDialInCode:
          type: string
          description: >
            The international dial-in prefix code associated with the country.
            For instance: "1" for USA, "44" for UK, etc.

            __Max length:__ 4. __Data Type:__ String (Numeric).
          example: '1'
        phoneNumber:
          type: string
          description: >
            The Phone number to be dialed after the international prefix –
            hence, excluding any domestic prefix if any.

            __Max length:__ 20. __Data Type:__ String (Numeric).
          example: '7181234567'
    PushMethod:
      required:
        - type
        - uri
      properties:
        type:
          type: string
          description: >
            The push method type corresponding to the URI supported by the Token
            Requestor. The array is absent if the Token Requestor does not
            support MDES Token Connect.

            __Max Length:__ 32

            Possible values are:
             * "ANDROID": The URI is an Android app intent.
             * "IOS": The URI is an iOS app intent.
             * "WEB": The URI is a browser URL.
          example: WEB
        uri:
          type: string
          description: >
            The URI to open the Token Requestor's application or website. Please
            refer to the Issuer Interface Implementation Guide for the detail of
            how to send the data to the Token Requestor.

            __Max Length:__ 128
          example: 'http://www.tokenrequestor1.com/pushtoken'
